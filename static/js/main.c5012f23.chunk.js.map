{"version":3,"sources":["components/AlertInfo.js","components/Nav.js","components/TodoItem.js","components/firebaseConnect.js","components/ToDoList.js","components/TodoForm.js","App.js","serviceWorker.js","components/firebaseDB.js","components/store.js","index.js"],"names":["AlertInfo","alertDismiss","props","alertOff","this","AlertShow","type","timeout","onDismiss","AlertContent","Component","connect","state","ownProps","dispatch","Nav","handleAdd","event","preventDefault","changeEditStatus","changeAddStatus","className","href","onClick","TodoItem","twoAction","getDataEdit","note","deleteData","getDataDelete","id","alertOn","data-toggle","title","style","marginRight","data-parent","content","editObj","deleteId","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","NoteData","database","ref","ToDoList","UNSAFE_componentWillMount","on","notes","arrData","forEach","element","key","noteTitle","val","noteContent","push","setState","dataFirebase","getData","map","value","TodoForm","isChange","name","target","addData","itemObj","editDataStore","item","addDataStore","printTitle","isAdd","editItem","htmlFor","defaultValue","onChange","rows","width","addItem","getItem","App","showIsEdit","isEdit","Boolean","window","location","hostname","match","redux","noteInitialState","store","createStore","action","console","log","JSON","stringify","child","update","remove","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c5012f23.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\r\nimport {connect} from 'react-redux';\r\nclass AlertInfo extends Component {\r\n    alertDismiss = () => {\r\n        this.props.alertOff();\r\n    }\r\n    render() {\r\n       if(this.props.AlertShow === false) return null ;\r\n       else {\r\n        \r\n            return (\r\n                <div>\r\n                    <AlertContainer>\r\n                        <Alert type=\"info\" timeout={1000} onDismiss={() => this.alertDismiss()}>{this.props.AlertContent}</Alert>\r\n                    </AlertContainer>\r\n                </div>\r\n            )\r\n       }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        AlertShow: state.AlertShow,\r\n        AlertContent: state.AlertContent\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        alertOff: () => {\r\n            dispatch({\r\n                type:\"ALERT_OFF\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertInfo)","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AlertInfo from './AlertInfo';\r\nclass Nav extends Component {\r\n    handleAdd = (event) => {\r\n        event.preventDefault();\r\n        this.props.changeEditStatus();\r\n        this.props.changeAddStatus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark pt-2 pb-3\">\r\n                     <AlertInfo></AlertInfo>\r\n                   <div className=\"container\">\r\n                   <a className=\"navbar-brand\" href=\"/\">Lê Thạch</a>\r\n                    {/* Links */}\r\n                    <ul className=\"navbar-nav d-flex justify-content-end\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Danh sách Todo</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\" onClick={(event) => this.handleAdd(event)}>Thêm Todo</a>\r\n                    </li>\r\n                   \r\n                    </ul>\r\n                   </div>\r\n                    \r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeEditStatus: () => {\r\n            dispatch({\r\n              type: \"CHANGE_EDIT_STATUS\"\r\n            })\r\n        },\r\n        changeAddStatus: () => {\r\n            dispatch({\r\n              type: \"CHANGE_ADD_STATUS\"\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nclass TodoItem extends Component {\r\n    twoAction  = () => {\r\n        this.props.changeEditStatus();\r\n        this.props.getDataEdit(this.props.note);\r\n        // this.props.changeAddStatus();\r\n    }\r\n\r\n    deleteData = () => {\r\n        this.props.getDataDelete(this.props.note.id);\r\n        this.props.alertOn(\"Xóa thành công\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <a className=\"card-link\" data-toggle=\"collapse\" href={\"#number\" + this.props.id}>\r\n                            {this.props.title}\r\n                        </a>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <button className=\"btn btn-info\" onClick={() => this.twoAction()} style={{marginRight: '5px'}}>Sửa</button>\r\n                            <button className=\"btn btn-danger\" onClick={() => this.deleteData()}>Xóa</button>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                    <div id={\"number\" + this.props.id} className=\"collapse\" data-parent=\"#accordion\">\r\n                        <div className=\"card-body\">\r\n                       {this.props.content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n      changeEditStatus: () => {\r\n        dispatch({\r\n          type: \"CHANGE_EDIT_STATUS\"\r\n        })\r\n      },\r\n\r\n      getDataEdit: (editObj) => {\r\n        dispatch({\r\n          type: \"GET_DATA_EDIT\", editObj\r\n        })\r\n      },\r\n      getDataDelete: (deleteId) => {\r\n        dispatch({\r\n          type: \"DELETE\", deleteId\r\n        })\r\n      },\r\n      alertOn: (AlertContent) => {\r\n        dispatch({\r\n          type: \"ALERT_ON\", AlertContent\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","var firebase = require(\"firebase/app\");\r\n\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/auth\");\r\nrequire(\"firebase/firestore\");\r\nrequire('firebase/database');\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDuK0jpuWuDQbFhbixZJtwkBBetudGRaqQ\",\r\n    authDomain: \"todolist-efa54.firebaseapp.com\",\r\n    databaseURL: \"https://todolist-efa54.firebaseio.com\",\r\n    projectId: \"todolist-efa54\",\r\n    storageBucket: \"todolist-efa54.appspot.com\",\r\n    messagingSenderId: \"1051328737772\",\r\n    appId: \"1:1051328737772:web:eb595a71f433e054d150c9\",\r\n    measurementId: \"G-QF6CLJ6RXD\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const NoteData = firebase.database().ref(\"/\");\r\n\r\n  // var data = firebase.database().ref(\"/\");\r\n  // data.once('value').then(function(snapshot){\r\n  //     console.log(snapshot.val());\r\n  // })\r\n\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport {NoteData} from './firebaseConnect';\r\n\r\nclass ToDoList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      dataFirebase: []\r\n    }\r\n  }\r\n  \r\n  UNSAFE_componentWillMount = () => {\r\n    NoteData.on('value', (notes) => {\r\n      var arrData = [];\r\n      notes.forEach(element => {\r\n        const key = element.key;\r\n        const noteTitle = element.val().title;\r\n        const noteContent = element.val().content;\r\n        arrData.push({\r\n          id: key,\r\n          title: noteTitle,\r\n          content: noteContent\r\n        })\r\n      });\r\n      this.setState({\r\n        dataFirebase: arrData,\r\n      })\r\n      \r\n    });\r\n  }\r\n\r\n  getData = () => {\r\n    if(this.state.dataFirebase) {\r\n      return this.state.dataFirebase.map((value,key) => {\r\n        return (\r\n          <TodoItem key={key} id={key} note={value} title={value.title} content={value.content}></TodoItem>\r\n        )\r\n      })\r\n    }\r\n  }\r\n    render() {\r\n        return (\r\n            <div id=\"accordion\">\r\n              {\r\n                this.getData()\r\n              }\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoList;","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass TodoForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            noteTitle: '',\r\n            noteContent: '',\r\n            id: '',\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        if(this.props.editItem){\r\n            this.setState({\r\n                noteTitle: this.props.editItem.title,\r\n                noteContent: this.props.editItem.content,\r\n                id: this.props.editItem.id\r\n            })\r\n            \r\n        }\r\n    }\r\n    \r\n\r\n    isChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n    \r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    addData = (title, content) => {\r\n        if(this.state.id){\r\n            var itemObj = {};\r\n            itemObj.id = this.state.id;\r\n            itemObj.title = this.state.noteTitle;\r\n            itemObj.content = this.state.noteContent;\r\n            this.props.editDataStore(itemObj);\r\n            this.props.changeEditStatus();\r\n            this.props.alertOn(\"Sửa thành công\");\r\n        }\r\n        else{\r\n            var item = {};\r\n            item.title = title;\r\n            item.content = content;\r\n            this.props.addDataStore(item);\r\n            this.props.alertOn(\"Thêm thành công!\");\r\n        }\r\n        \r\n    }\r\n    printTitle = () => {\r\n        if(this.props.isAdd === true){\r\n            return <h4>Thêm mới</h4>;\r\n        }\r\n        else {\r\n            return <h4>Sửa nội dung</h4>;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    {this.printTitle()}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">Tiêu đề Note:</label>\r\n                        <input type=\"text\" defaultValue={this.props.editItem.title} className=\"form-control\" name=\"noteTitle\" onChange={(event) => this.isChange(event)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\">Nội dung Note:</label>\r\n                        <textarea className=\"form-control\" defaultValue={this.props.editItem.content} rows={4} name=\"noteContent\" onChange={(event) => this.isChange(event)}/>\r\n                    </div>\r\n                    <input type=\"reset\" className=\"btn btn-info\" style={{width:'100%'}} value=\"Lưu\" onClick={() => this.addData(this.state.noteTitle, this.state.noteContent)}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n       editItem: state.editItem,\r\n       isAdd: state.isAdd,\r\n       addItem: state.addItem\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        addDataStore: (getItem) => {\r\n            dispatch({type: \"ADD_DATA\", getItem})\r\n        },\r\n        editDataStore: (getItem) => {\r\n            dispatch({type: \"EDIT\", getItem})\r\n        },\r\n\r\n        changeEditStatus: () => {\r\n            dispatch({\r\n              type: \"CHANGE_EDIT_STATUS\"\r\n            })\r\n        },\r\n\r\n        changeAddStatus: () => {\r\n            dispatch({\r\n              type: \"CHANGE_ADD_STATUS\"\r\n            })\r\n        },\r\n        alertOn: (AlertContent) => {\r\n            dispatch({\r\n              type: \"ALERT_ON\", AlertContent\r\n            })\r\n          },\r\n        alertOff: () => {\r\n            dispatch({\r\n                type: \"ALERT_OFF\"\r\n            })\r\n        }    \r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport ToDoList from './components/ToDoList';\nimport TodoForm from './components/TodoForm';\nimport {connect} from 'react-redux';\n\nclass App extends Component {\n  showIsEdit = () => {\n    if (this.props.isEdit){\n      return <TodoForm></TodoForm>\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav></Nav>\n        <div className=\"container\"> \n            <div className=\"row pt-5\">\n                <div className=\"col-9\">\n                  <ToDoList></ToDoList>\n                </div>\n                <div className=\"col-3\">\n                  {this.showIsEdit()}\n                </div>\n            </div>\n          \n        </div>\n      </div>\n    );\n  }\n  \n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isEdit: state.isEdit\n  }\n}\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var firebase = require(\"firebase/app\");\r\nexport const NoteData = firebase.database().ref(\"/\");\r\n","import {NoteData} from './firebaseDB';\r\nvar redux = require('redux');\r\nconst noteInitialState = {\r\n    isEdit: false,\r\n    editItem: {},\r\n    isAdd: false,\r\n    AlertShow: false,\r\n    AlertContent:{}\r\n}\r\nconst allReducer = (state = noteInitialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_DATA\":\r\n            NoteData.push(action.getItem);\r\n            console.log(\"Thêm dữ liệu thành công\"  + JSON.stringify(action.getItem));\r\n            return state;\r\n        case \"CHANGE_EDIT_STATUS\":\r\n            return {...state, isEdit: !state.isEdit, isAdd: false};\r\n\r\n        case \"CHANGE_ADD_STATUS\":\r\n            return {...state, isAdd: true, editItem: {}};\r\n    \r\n        case \"GET_DATA_EDIT\":\r\n            return {...state, editItem: action.editObj};\r\n\r\n        case \"EDIT\":\r\n            NoteData.child(action.getItem.id).update({\r\n                title: action.getItem.title,\r\n                content: action.getItem.content\r\n            })\r\n            console.log(\"Dữ liệu được update\" + JSON.stringify(action.getItem) + \"thành công!\");\r\n            return {...state, editItem: {}};\r\n        case \"DELETE\":\r\n            NoteData.child(action.deleteId).remove();\r\n            console.log(\"Đã xóa item với id là:\" + action.deleteId);\r\n            return state;\r\n        case \"ALERT_ON\":\r\n            return {...state, AlertShow: true, AlertContent: action.AlertContent};\r\n        case \"ALERT_OFF\":\r\n            return {...state, AlertShow: false};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nvar store = redux.createStore(allReducer);\r\nstore.subscribe(function(){\r\n    console.log(JSON.stringify(store.getState()));\r\n    \r\n})\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './components/store';\n\nReactDOM.render(\n <Provider store={store}>\n     <App />\n </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}